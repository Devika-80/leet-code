Example 1:

Input: citations = [3,0,6,1,5]
Output: 3
Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.
Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.
Example 2:

Input: citations = [1,3,1]
Output: 1
 

Constraints:

n == citations.length
1 <= n <= 5000
0 <= citations[i] <= 1000


EXPLANATION
  Input:
citations = [3, 0, 6, 1, 5]
Step 1: Initialize Buckets
n = 5, so we create buckets[] of size 6:
ini
Copy
Edit
buckets = [0, 0, 0, 0, 0, 0]
Step 2: Fill Buckets
c = 3 → buckets[3]++ → [0, 0, 0, 1, 0, 0]
c = 0 → buckets[0]++ → [1, 0, 0, 1, 0, 0]
c = 6 (>= n) → buckets[5]++ → [1, 0, 0, 1, 0, 1]
c = 1 → buckets[1]++ → [1, 1, 0, 1, 0, 1]
c = 5 (>= n) → buckets[5]++ → [1, 1, 0, 1, 0, 2]
Step 3: Compute H-Index
Start iterating from i = 5 down to 0, accumulating count:
i = 5: count = 2 (not enough papers for h=5)
i = 4: count = 2 (not enough for h=4)
i = 3: count = 3 (✅ valid h=3, return 3)
Output:

3
program:
class Solution {
    public int hIndex(int[] citations) {
    int n = citations.length;
    int[] buckets = new int[n+1];
    for(int c : citations) {
        if(c >= n) {
            buckets[n]++;
        } else {
            buckets[c]++;
        }
    }
    int count = 0;
    for(int i = n; i >= 0; i--) {
        count += buckets[i];
        if(count >= i) {
            return i;
        }
    }
    return 0;
}
}
