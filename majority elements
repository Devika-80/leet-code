Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2
 

Constraints:

n == nums.length
1 <= n <= 5 * 104
-109 <= nums[i] <= 109

solution:

class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        return nums[n/2];
    }
}

 
Execution Steps:
Initial Array: nums = {3, 2, 3}

Sort the Array:

After sorting: nums = {2, 3, 3}
Find the Middle Element:

n = nums.length = 3
Middle index: n / 2 = 3 / 2 = 1
Element at index 1: nums[1] = 3
Return:

The function returns 3.

